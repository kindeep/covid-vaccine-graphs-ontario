{"version":3,"sources":["data/useVaccineData.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["fetcher","url","Promise","resolve","reject","jsonp","error","data","App","useSWR","failed","loading","result","records","useVaccineData","useEffect","JSON","stringify","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"6PAGMA,EAAU,SAACC,GAAD,OACd,IAAIC,SAAQ,SAACC,EAASC,GACpBC,IACE,oHACA,SAACC,EAAOC,GACNJ,EAAQI,U,WCcDC,MAjBf,WAAgB,IACND,EDeK,WAA2B,IAAD,IACVE,YAAO,YAAaT,GAAzCO,EAD+B,EAC/BA,KAEFG,IAHiC,EACzBJ,MAGRK,GAAWJ,EAIjB,MAAO,CAAEA,KAFyB,OAAGA,QAAH,IAAGA,GAAH,UAAGA,EAAMK,cAAT,aAAG,EAAcC,QAE3BH,SAAQC,WCvBfG,GAATP,KASR,OAPAQ,qBAAU,WACRV,IACE,oHACA,SAACC,EAAOC,SAET,IAGD,8BACE,8BAAMS,KAAKC,UAAUV,EAAM,KAAM,QCHxBW,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,OCFdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.50477786.chunk.js","sourcesContent":["import jsonp from \"jsonp\";\nimport useSWR from \"swr\";\n\nconst fetcher = (url: string) =>\n  new Promise((resolve, reject) => {\n    jsonp(\n      \"https://data.ontario.ca/api/3/action/datastore_search?resource_id=8a89caa9-511c-4568-af89-7f2174b4378c&limit=365\",\n      (error, data) => {\n        resolve(data);\n      }\n    );\n  });\n\nexport interface VaccineDataRecord {\n  report_date: Date;\n  previous_day_doses_administered?: number;\n  total_doses_administered?: number;\n  total_doses_in_fully_vaccinated_individuals?: number;\n  total_individuals_fully_vaccinated?: number;\n}\n\nexport default function useVaccineData() {\n  const { data, error }: any = useSWR(\"/api/user\", fetcher);\n\n  const failed = !!error;\n  const loading = !data;\n\n  const records: VaccineDataRecord[] = data?.result?.records;\n\n  return { data: records, failed, loading };\n}\n","import React, { useEffect } from \"react\";\nimport \"./App.css\";\nimport jsonp from \"jsonp\";\nimport useVaccineData from \"./data/useVaccineData\";\n\nfunction App() {\n  const { data } = useVaccineData();\n\n  useEffect(() => {\n    jsonp(\n      \"https://data.ontario.ca/api/3/action/datastore_search?resource_id=8a89caa9-511c-4568-af89-7f2174b4378c&limit=365\",\n      (error, data) => {}\n    );\n  }, []);\n\n  return (\n    <div >\n      <pre>{JSON.stringify(data, null, 2)}</pre>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { RecoilRoot } from \"recoil\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <RecoilRoot>\n      <App />\n    </RecoilRoot>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}